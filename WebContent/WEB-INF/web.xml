<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  <display-name>PersonWebsites</display-name>
    <!-- 全局范围内环境参数的初始化 -->
  <context-param>
    <param-name>contextConfigLocation</param-name><!-- 名称 -->
    <param-value>classpath:spring-mybatis.xml</param-value><!-- 值 -->
  </context-param>
  
  <!-- 配置文件的加载顺序：  先ServletContext >> context-param >> listener >> filter >> servlet >> spring -->
  <!-- 过滤器配置，设置字符编码为列  -->
  <filter>
     <filter-name>encodingFilter</filter-name><!-- filter的名字 -->
     <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class><!-- 定义filter的类的名称  -->
     <async-supported>true</async-supported><!-- 设置是否启用异步支持 -->
     <init-param><!-- 用来定义参数，在servlet中可以使用下列方法来获得：String parma-name = getServletContext().getInitParamter("param-name里面的值") -->
       <param-name>encoding</param-name><!-- 参数名称 -->
       <param-value>UTF-8</param-value><!-- 参数值 -->
     </init-param>
  </filter>
  <filter-mapping><!-- 用来定义filter对于的url -->
     <filter-name>encodingFilter</filter-name><!-- 对应上面的名字 -->
     <url-pattern>/*</url-pattern>  <!-- 指定filter对应的url，即要过滤的请求 -->
  </filter-mapping>
  
  <!-- 监听器的配置  -->
  <!-- 列： spring 监听器 -->
  <listener><!-- 用来设定Listener接口  -->
     <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class><!-- 定义Listener 的类名称 -->
  </listener>
  <!-- 防止Spring内存溢出监听器 -->
  <listener>
     <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>
  
  <!--            servlet配置             -->
  <servlet><!-- 用来声明一个servlet的数据 -->
     <servlet-name>SpringMvc</servlet-name><!-- 指定servlet的名称 -->
     <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class> <!-- 指定servlet的类名称，这里配置了前端控制器  -->
     <init-param><!--用来定义参数，可有多个init-param.在servlet类中通过getInitParamenter （String name）方法访问初始化参数  -->
        <param-name>contextConfigLocation</param-name><!-- 参数名称  -->
        <param-value>classpath:spring-mvc.xml</param-value> <!-- 参数值 -->
     </init-param>
     <load-on-startup>1</load-on-startup> <!-- 当值为正数或零时：servlet容器首先加载数值小的servlet，再依次加载其他数值大的servlet -->
     <async-supported>true</async-supported><!-- 是否启用异步支持 -->
  </servlet>
  <servlet-mapping>
     <servlet-name>SpringMvc</servlet-name>
     <url-pattern>*.do</url-pattern><!-- 指定servlet所对应的rul -->
  </servlet-mapping>
  
  <!-- 设置会话超时配置（单位为分钟）  -->
  <session-config>
    <session-timeout>30</session-timeout><!-- 30分钟失效  -->
  </session-config>
  
  <!--   MIME 类型配置 -->
  <mime-mapping><!-- 设定某种扩展名的文件用一种应用程序来打开的方式类型，该扩展名文件被访问的时候，浏览器会自动使用指定应用程序来打开 -->
     <extension>*.ppt</extension> <!-- 指定扩展名 -->
     <mime-type>application/mspowerpoint</mime-type><!-- mime格式 -->
  </mime-mapping>
  
  <!--   配置错误页面    发生404 错误 要跳转的页面   -->
 <error-page> 
     <error-code>404</error-code>
      <location>/error.html</location>
  </error-page>
  <error-page>
     <exception-type>java.lang.Exception</exception-type>
     <location>/ExceptionError.html</location>
  </error-page> 
  
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
</web-app>